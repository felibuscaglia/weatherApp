{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\cbusc\\\\Henry\\\\weatherApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:\\\\Users\\\\cbusc\\\\Henry\\\\weatherApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Route}from'react-router-dom';import'./App.css';import Nav from'../components/Nav.jsx';import Cards from'../components/Cards.jsx';import About from'../components/About';import Ciudad from'../components/Ciudad';var apiKey='4ae2636d8dfbdc3044bede63951a019b';function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),cities=_useState2[0],setCities=_useState2[1];function onClose(id){setCities(function(oldCities){return oldCities.filter(function(c){return c.id!=id;});});}function onSearch(ciudad){//Llamado a la API del clima\nfetch(\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(ciudad,\"&appid=\").concat(apiKey,\"&units=metric\")).then(function(r){return r.json();}).then(function(recurso){if(recurso.main!==undefined){var _ciudad={min:Math.round(recurso.main.temp_min),max:Math.round(recurso.main.temp_max),img:recurso.weather[0].icon,id:recurso.id,wind:recurso.wind.speed,temp:recurso.main.temp,name:recurso.name,weather:recurso.weather[0].main,clouds:recurso.clouds.all,latitud:recurso.coord.lat,longitud:recurso.coord.lon};setCities(function(oldCities){return[].concat(_toConsumableArray(oldCities),[_ciudad]);});}else{alert(\"Ciudad no encontrada\");}});}return React.createElement(\"div\",{className:\"App\"},React.createElement(Route,{path:\"/\",render:function render(){return React.createElement(Nav,{onSearch:onSearch});}}),React.createElement(\"div\",null,React.createElement(Route,{exact:true,path:\"/\",render:function render(){return React.createElement(Cards,{cities:cities,onClose:onClose});}})),React.createElement(Route,{path:\"/about\",component:About}),React.createElement(Route,{path:\"/ciudad/:ciudadId\",render:function render(_ref){var match=_ref.match;return React.createElement(Ciudad,{match:match,city:cities.filter(function(c){return c.id===parseInt(match.params.ciudadId);})});}}),React.createElement(\"hr\",null));}export default App;","map":{"version":3,"sources":["C:/Users/cbusc/Henry/weatherApp/src/containers/App.js"],"names":["React","useState","Route","Nav","Cards","About","Ciudad","apiKey","App","cities","setCities","onClose","id","oldCities","filter","c","onSearch","ciudad","fetch","then","r","json","recurso","main","undefined","min","Math","round","temp_min","max","temp_max","img","weather","icon","wind","speed","temp","name","clouds","all","latitud","coord","lat","longitud","lon","alert","match","parseInt","params","ciudadId"],"mappings":"sUAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,KAAT,KAAsB,kBAAtB,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,GAAP,KAAgB,uBAAhB,CACA,MAAOC,CAAAA,KAAP,KAAkB,yBAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,qBAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CAEA,GAAMC,CAAAA,MAAM,CAAG,kCAAf,CAEA,QAASC,CAAAA,GAAT,EAAe,eACeP,QAAQ,CAAC,EAAD,CADvB,wCACNQ,MADM,eACEC,SADF,eAEb,QAASC,CAAAA,OAAT,CAAiBC,EAAjB,CAAqB,CACnBF,SAAS,CAAC,SAAAG,SAAS,QAAIA,CAAAA,SAAS,CAACC,MAAV,CAAiB,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACH,EAAF,EAAQA,EAAZ,EAAlB,CAAJ,EAAV,CAAT,CACD,CACD,QAASI,CAAAA,QAAT,CAAkBC,MAAlB,CAA0B,CACxB;AACAC,KAAK,6DAAsDD,MAAtD,mBAAsEV,MAAtE,kBAAL,CACGY,IADH,CACQ,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACC,IAAF,EAAJ,EADT,EAEGF,IAFH,CAEQ,SAACG,OAAD,CAAa,CACjB,GAAGA,OAAO,CAACC,IAAR,GAAiBC,SAApB,CAA8B,CAC5B,GAAMP,CAAAA,OAAM,CAAG,CACbQ,GAAG,CAAEC,IAAI,CAACC,KAAL,CAAWL,OAAO,CAACC,IAAR,CAAaK,QAAxB,CADQ,CAEbC,GAAG,CAAEH,IAAI,CAACC,KAAL,CAAWL,OAAO,CAACC,IAAR,CAAaO,QAAxB,CAFQ,CAGbC,GAAG,CAAET,OAAO,CAACU,OAAR,CAAgB,CAAhB,EAAmBC,IAHX,CAIbrB,EAAE,CAAEU,OAAO,CAACV,EAJC,CAKbsB,IAAI,CAAEZ,OAAO,CAACY,IAAR,CAAaC,KALN,CAMbC,IAAI,CAAEd,OAAO,CAACC,IAAR,CAAaa,IANN,CAObC,IAAI,CAAEf,OAAO,CAACe,IAPD,CAQbL,OAAO,CAAEV,OAAO,CAACU,OAAR,CAAgB,CAAhB,EAAmBT,IARf,CASbe,MAAM,CAAEhB,OAAO,CAACgB,MAAR,CAAeC,GATV,CAUbC,OAAO,CAAElB,OAAO,CAACmB,KAAR,CAAcC,GAVV,CAWbC,QAAQ,CAAErB,OAAO,CAACmB,KAAR,CAAcG,GAXX,CAAf,CAaAlC,SAAS,CAAC,SAAAG,SAAS,qCAAQA,SAAR,GAAmBI,OAAnB,IAAV,CAAT,CACD,CAfD,IAeO,CACL4B,KAAK,CAAC,sBAAD,CAAL,CACD,CACF,CArBH,EAsBD,CACD,MACE,4BAAK,SAAS,CAAC,KAAf,EACE,oBAAC,KAAD,EACE,IAAI,CAAE,GADR,CAEE,MAAM,CAAG,wBAAM,qBAAC,GAAD,EAAK,QAAQ,CAAI7B,QAAjB,EAAN,EAFX,EADF,CAKE,+BACE,oBAAC,KAAD,EACE,KAAK,KADP,CACQ,IAAI,CAAG,GADf,CAEE,MAAM,CAAI,wBAAM,qBAAC,KAAD,EAAO,MAAM,CAAEP,MAAf,CAAuB,OAAO,CAAEE,OAAhC,EAAN,EAFZ,EADF,CALF,CAWE,oBAAC,KAAD,EACE,IAAI,CAAC,QADP,CAEE,SAAS,CAAGN,KAFd,EAXF,CAeE,oBAAC,KAAD,EACE,IAAI,CAAC,mBADP,CAEE,MAAM,CAAI,yBAAGyC,CAAAA,KAAH,MAAGA,KAAH,OAAe,qBAAC,MAAD,EAAQ,KAAK,CAAGA,KAAhB,CAAwB,IAAI,CAAErC,MAAM,CAACK,MAAP,CAAc,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACH,EAAF,GAASmC,QAAQ,CAACD,KAAK,CAACE,MAAN,CAAaC,QAAd,CAArB,EAAf,CAA9B,EAAf,EAFZ,EAfF,CAmBE,8BAnBF,CADF,CAuBD,CAED,cAAezC,CAAAA,GAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport './App.css';\r\nimport Nav from '../components/Nav.jsx';\r\nimport Cards from '../components/Cards.jsx';\r\nimport About from '../components/About';\r\nimport Ciudad from '../components/Ciudad'\r\n\r\nconst apiKey = '4ae2636d8dfbdc3044bede63951a019b';\r\n\r\nfunction App() {\r\n  const [cities, setCities] = useState([]);\r\n  function onClose(id) {\r\n    setCities(oldCities => oldCities.filter(c => c.id != id));\r\n  }\r\n  function onSearch(ciudad) {\r\n    //Llamado a la API del clima\r\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${apiKey}&units=metric`)\r\n      .then(r => r.json())\r\n      .then((recurso) => {\r\n        if(recurso.main !== undefined){\r\n          const ciudad = {\r\n            min: Math.round(recurso.main.temp_min),\r\n            max: Math.round(recurso.main.temp_max),\r\n            img: recurso.weather[0].icon,\r\n            id: recurso.id,\r\n            wind: recurso.wind.speed,\r\n            temp: recurso.main.temp,\r\n            name: recurso.name,\r\n            weather: recurso.weather[0].main,\r\n            clouds: recurso.clouds.all,\r\n            latitud: recurso.coord.lat,\r\n            longitud: recurso.coord.lon\r\n          };\r\n          setCities(oldCities => [...oldCities, ciudad]);\r\n        } else {\r\n          alert(\"Ciudad no encontrada\");\r\n        }\r\n      });\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <Route\r\n        path= \"/\"\r\n        render= {() => <Nav onSearch = {onSearch} />}\r\n      />\r\n      <div>\r\n        <Route \r\n          exact path = \"/\"\r\n          render = {() => <Cards cities={cities} onClose={onClose}/>}\r\n        />\r\n      </div>\r\n      <Route \r\n        path=\"/about\"\r\n        component= {About}\r\n      />\r\n      <Route \r\n        path=\"/ciudad/:ciudadId\"\r\n        render = {({ match }) => <Ciudad match={ match } city={cities.filter(c => c.id === parseInt(match.params.ciudadId))}/>}\r\n      />\r\n      <hr />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}